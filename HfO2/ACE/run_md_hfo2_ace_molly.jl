using LinearAlgebra
using StaticArrays
#using AtomsBase
using InteratomicPotentials 
using InteratomicBasisPotentials
using Atomistic
using Molly
using BenchmarkTools
#using ThreadsX #julia --threads 4
using Plots

include("load_data.jl")


# System #######################################################################
systems, energies, forces, stresses = load_data("a-Hfo2-300K-NVT.extxyz")
N = length(systems[1])
initial_system = systems[1]
Δt = 2.5 #2.5u"ps"


# Thermostat ###################################################################
reference_temp = 300.0#u"K"
ν = 0.01 * Δt #0.01 / Δt # stochastic collision frequency
eq_thermostat = Molly.AndersenThermostat(reference_temp, ν)
#eq_thermostat = Molly.AndersenThermostat(reference_temp, Δt * coupling_factor)


# Create potential #############################################################
n_body = 5
max_deg = 6
r0 = 1.0 # ( rnn(:Hf) + rnn(:O) ) / 2.0 ?
rcutoff = 5.0
wL = 1.0
csp = 1.0
β = [521227.5589117126, 293251.36624708126, 117626.23762618586, 32237.998578098493, 5427.233836037734, 421.6242952408443, 3.5890711924471594e7, 1.568769659173533e7, -4.178298077686102e6, 446637.7129145137, 4.165521869036937e6, -1.6718683138488838e6, -5.124190032394988e6, -4.0394796965486743e6, -1.0044246455910479e6, -164556.3497495033, -12296.586029231472, 2.4160585565299545e6, 219772.78207532378, -27471.52719928959, -10540.35360964699, -1400.4670454052266, -9016.568218185279, -3306.2547845132212, -458.91068975191644, 15893.518272599465, 1699.3241551471315, 417.70418326263933, 9.443715867927528, 10.279658616123273, -198825.02623331817, -71525.76670393835, -5804.057482677791, 1.1809334092050132e6, 130801.58710086609, 4937.6586806844025, 141.63619282467235, 53.2800300379302, 3096.7645323972115, -56.84596118707155, -841.6317518015154, 331554.27084142837, 27757.555998482174, 333.80274325877855, 422.99111822103697, 52774.50714920321, 2769.0828794249896, 3222.576395801277, 812558.613962208, 659697.6291336057, 170473.59040701794, 29336.745831924298, 2727.2448922699846, 3134.7510497402573, 1550.8851918521784, 197.0010020142682, 45.402953438405184, 33233.71787490602, 12342.54793028486, 647.7361355708845, -15.852497074164466, 312.13272490798624, 8.140397169942782e6, 6.968087582803755e6, 753638.0763880361, 42587.633902619535, -897904.740716828, -869493.9458828901, -211146.02914818397, -17855.46708045602, 65238.8664908803, 12116.918407038995, -48008.27275081348, -3146.912077258001, 725405.0821330353, 84970.65798207272, 931908.343113711, -137525.22815981123, -30699.416264406045, -4856.424476059803, 744506.8870226877, 20126.218608740484, 92708.05316868552, -4.368027587162799e6, -202433.7184904679, 277170.0541044502, 27979.968057001966, 12657.422681896656, 3982.8086972969227, -29444.176510226105, 9961.64688887759, 3225.607956410994, -4561.808672246906, -2586.745520019081, -2153.816083366748, 2067.812296011757, -17074.617598024506, 3187.983334708735, 498.22585468089517, 11127.987383661626, -52731.76280925962, -5220.839428926398, 10585.112333818879, -2.371156485698829e6, -351584.35026649013, 10714.39796940641, 165.48652130391378, -12843.621770058273, -2006.1809623561835, -578099.6903971086, -42814.83731913576, -64761.21786286696, -1.9032917896035758e6, -1.7421192661981576e6, -248373.8821588779, -16389.45377274033, -25532.00637523863, -7833.748319763957, -167548.64780820682, -33180.77309137713, -1435.9515142179703, -498.4321478706121, 4.984561288876485e6, 3.7853741977595566e6, 292903.4102075728, -4.47202974131117e7, -1.3190456055677857e6, -97280.11192327262, -88385.5253269378, 69615.89332078958, 247852.7518332554, -2.742654909630544e7, -325467.2734606805, -2.334223066646147e6, 5.470429759245701e7, 5.120267733635087e6, 264641.29273106216, -16080.695585731606, 76339.48956711212, 94110.59088584266, -109538.35441336817, -1.1927009462737949e6, 2.4751350365027577e7, 870580.3261655786, 2.175155712165293e6, -1.2990073430512724e7, -2.5519282798111453e6, -145922.03615244926, 18105.356554915194, -45627.81764034585, -12063.123671603265, 85449.09645821211, 608926.0263680561, -3.4567379353229334e6, -267071.28949781996, -445803.13008683553, 1.2407194572095324e6, 1.0616864421706353e6, 80115.77583527724, -8520.46730764205, 88062.92117977455, -3.589468021153399e7, -1.5690292064677443e7, 4.177127378543191e6, -446870.76564883586, -4.1654956875256607e6, 1.6718797545615772e6, 1.89626160233484e7, 1.0433332510965012e7, 3.7720613970994567e6, 768361.1898508462, 45061.68877808711, -7559.9965839647375, -280802.91462322517, -212842.83767715946, -52849.81793457467, -8395.772259854128, -807.2307369352491, 2.543946019741403e7, -3.7527826521123922e6, -9.08798064658715e6, -3.8671402123233834e6, -583557.6971647701, -3047.2198456378646, -1382.4682500131566, -43.719029842860856, 18217.22089960211, 4208.001706083602, 411.66305234476965, -74.68779562658074, 66.85221902330467, -8530.80085164376, -2935.0415760679966, -100.45897375056254, -3.56342980785119e6, -442147.5060631381, 120020.74617885721, 31588.6945050726, -55.71501872761292, 6814.711459039557, 1370.8887350841603, -91.01373804006329, -1.1831472498255828e6, -293677.786627973, -29786.391940084726, -256.64966047156605, -19400.9869952526, -3106.1702024455735, 903.4760705492256, -1.2660931468323447e8, 8.053062460923577e6, -4.819016209978872e7, -1.810592521842964e7, -1.1681384983054711e6, -350300.81300413073, -175638.8580441049, -1845.401288682359, -101.257302979729, 3.848403496244352e7, 1.6801971504342303e7, -352991.6786279733, -10846.61112812097, 1.0366954934104637e6, 266081.8022039923, 241917.55765887708, 7368.000861419634, -1718.3750512499205, -2.7638214425146013e8, -1.2966051535822181e8, -3.412068983204368e7, -3.900371572479067e6, 10676.665017815478, 2484.3775979528536, 18902.915418902885, 16760.72279410975, 36101.713402153895, 3233.794866869544, 3.683257098371895e7, 7.64037830528367e6, 640810.15254669, -11352.622775343198, 3.198462678896302e6, 349526.51969220815, 98665.45131552086, -3.18496139450967e9, -1.699069758813038e9, -2.4038510411376026e8, -1.0438045651681434e7, -235785.68559340836, -111422.78966190119, -4.574335103569315e7, -8.280857564937915e6, 177.706318708541, 42954.321752938245, 7341.7843113457575, -2299.194085769011, -1822.0759172260648, 67544.33720567422, 23601.19411338137, -28861.327402173883, 780.3465066347635, 122638.03155685157, 4824.538609312722, 5760.1175138664885, -1.2976968733031851e8, -4.848106460572387e7, -6.337575127524448e6, 3059.7027469042223, 413427.14914707316, 44916.62364135323, -2.908875089933898e6, -300024.20338112355, -161075.4168079455, 1.2706354426063885e10, 9.38567414944637e9, 1.511202540835863e9, 1.0328753793932454e8, 6.544082584245946e6, 1.2237368112077538e6, 4.382630918283885e8, 1.1865220771928632e8, 359004.1367073789, -8.87606149554872e6, 160118.25292896535, 176458.18726457312, 21557.909713638262, -1.3971488224785239e8, -3.1458034637253642e7, -3.1063730313808178e6, -3866.371843700135, 48327.61772818733, 18886.813304228097, -4.042682044569628e7, -4.430303570876701e6, -1.8566978539062056e6, 5.069759346388428e9, 2.200149258829319e9, 2.25078371695814e8, -421975.0936714362, 2.843568498047221e7, -41731.925617933055, -333858.24416172097, -1.1459008984485199e6, 3.351077421078631e8, 7.303546072295874e7, 7.615502385701071e6, -2.0448112711151997e10, -1.2022221428880342e10, -8.328249204133099e8, 3.359619542755049e6, -5.518680658128973e8, -19782.32728358794, 2.7993357669196376e6, 3.174403827608868e6, -4.2054418290113384e8, -1.28951039319352e8, -8.806838575229488e6, 7.996750950742749e9, 6.266610406113582e9, 1.5708780283181626e8, -1.327257662089351e7, 6.468055266654617e8]
rpi_params = RPIParams([:Hf, :O], n_body, max_deg, wL, csp, r0, rcutoff)
potential = RPI(β, rpi_params)

function InteratomicPotentials.energy_and_force(s::AbstractSystem, p::RPI)
    B = evaluate_basis(s, rpi_params)
    dB = evaluate_basis_d(s, rpi_params)
    e = B' * p.coefficients
    f = [SVector(d * p.coefficients...) for d in dB]
    return (; e, f)
end


# First stage ##################################################################
eq_steps = 100
eq_simulator = MollySimulator(Δt, eq_steps, coupling = eq_thermostat)
eq_result = @time simulate(initial_system, eq_simulator, potential)


# Second stage #################################################################
prod_steps = 100
prod_simulator = MollySimulator(Δt, prod_steps, t₀ = austrip(get_time(eq_result)))
prod_result = @time simulate(get_system(eq_result), prod_simulator, potential)


# Results ######################################################################
temp = plot_temperature(eq_result, 10)
energy = plot_energy(eq_result, 10)

savefig(plot_temperature!(temp, prod_result, 10), "temp_hfo2_ace_molly.svg")
savefig(plot_energy!(energy, prod_result, 10), "energy_hfo2_ace_molly.svg")

rdf = plot_rdf(prod_result, 1.0, Int(0.95 * prod_steps))
savefig(rdf, "rdf_hfo2_ace_molly_rdf.svg")

visualize(prod_result, "hfo2_ace_molly.gif")

